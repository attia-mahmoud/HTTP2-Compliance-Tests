{
  "1": {
    "description": "Client must send connection preface after TLS establishment",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "msg": "No initial settings received from peer at 192.168.122.69:7700"
        }
      }
    }
  },
  "2": {
    "description": "the connection preface starts with the string: PRI * HTTP/2.0\\r\\n\\r\\nSM\\r\\n\\r\\n",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "3": {
    "description": "Client preface must include a SETTINGS frame",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 1. Additional data: b'SETTINGS expected'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "4": {
    "description": "Values greater than 16,384 MUST NOT be sent unless receiver has set larger SETTINGS_MAX_FRAME_SIZE",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 2 of 2 frames. Error code 6. Additional data: b'too large frame size'.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'DATA', 'payload_size': 17000, 'flags': {'END_STREAM': True}}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "DATA",
              "payload_size": 17000,
              "flags": {
                "END_STREAM": true
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "5": {
    "description": "The frame type determines the format and semantics of the frame. Implementations MUST ignore and discard frames of unknown types.",
    "result": {
      "Worker_1": null,
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "6": {
    "description": "A reserved 1-bit field. The semantics of this bit are undefined, and the bit MUST remain unset (0x00) when sending and MUST be ignored when receiving.",
    "result": {
      "Worker_2": {
        "State": "FINAL",
        "Variables": {
          "msg": "Stream 1 reset by peer: Received StreamReset frame after sending frame #1 of 1: HEADERS. Error code None.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'fa8608ac-4eed-40fc-ac52-54bdc6337a9a'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "FINAL",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Sun, 07 Sep 2025 16:39:14 GMT')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'reserved_bit': True}]",
          "msg": "Server_Received_Error_From_Proxy"
        }
      }
    }
  },
  "7": {
    "description": "Receiving any frame other than HEADERS or PRIORITY on a stream in this (idle) state MUST be treated as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'DATA: stream in idle'.",
          "sent_frames": "[{'type': 'DATA'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "8": {
    "description": "If an endpoint receives additional frames, other than WINDOW_UPDATE, PRIORITY, or RST_STREAM, for a stream that is in the half-closed (remote) state, it MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 5. Additional data: b'DATA: stream in half-closed(remote)'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': True}}, {'type': 'DATA'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS",
              "flags": {
                "END_STREAM": true
              }
            },
            {
              "type": "DATA"
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "9": {
    "description": "An endpoint MUST NOT send frames other than PRIORITY on a closed stream.",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 3 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'RST_STREAM'}, {'type': 'HEADERS', 'flags': {'END_STREAM': True}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "RST_STREAM"
            },
            {
              "type": "HEADERS",
              "flags": {
                "END_STREAM": true
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "10": {
    "description": "Streams initiated by a client MUST use odd-numbered stream identifiers.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'stream_id': 2}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "11": {
    "description": "The identifier of a newly established stream MUST be numerically greater than all streams that the initiating endpoint has opened or reserved.",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 2 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'stream_id': 3}, {'type': 'HEADERS', 'stream_id': 1}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS",
              "stream_id": 3
            },
            {
              "type": "HEADERS",
              "stream_id": 1
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '2e1d7dda-85ce-4a55-b217-11ae42b8f3dd'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]"
        }
      }
    }
  },
  "12": {
    "description": "DATA frames MUST be associated with a stream.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'DATA: stream in idle'.",
          "sent_frames": "[{'type': 'DATA'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "13": {
    "description": "If a DATA frame is received whose Stream Identifier field is 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'DATA: stream_id == 0'.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'DATA', 'stream_id': 0, 'flags': {'END_STREAM': True}}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "DATA",
              "stream_id": 0,
              "flags": {
                "END_STREAM": true
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "14": {
    "description": "If a DATA frame is received whose stream is not in the 'open' or 'half-closed (local)' state, the recipient MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED. (Tested in the idle state.)",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'DATA: stream in idle'.",
          "sent_frames": "[{'type': 'DATA'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "15": {
    "description": "If a DATA frame is received whose stream is not in the 'open' or 'half-closed (local)' state, the recipient MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED. (Tested in the half-closed (remote) state.)",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 5. Additional data: b'DATA: stream in half-closed(remote)'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': True}}, {'type': 'DATA'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS",
              "flags": {
                "END_STREAM": true
              }
            },
            {
              "type": "DATA"
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "16": {
    "description": "If a DATA frame is received whose stream is not in the 'open' or 'half-closed (local)' state, the recipient MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED. (Tested in the closed state.)",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 3 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'RST_STREAM'}, {'type': 'DATA', 'flags': {'END_STREAM': True}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "RST_STREAM"
            },
            {
              "type": "DATA",
              "flags": {
                "END_STREAM": true
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "17": {
    "description": "A HEADERS frame without the END_HEADERS flag set MUST be followed by a CONTINUATION frame for the same stream.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'DATA'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "18": {
    "description": "If a HEADERS frame is received whose Stream Identifier field is 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'stream_id': 0}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "19": {
    "description": "If a PRIORITY frame is received with a stream identifier of 0x00, the recipient MUST respond with a connection error of type PROTOCOL_ERROR",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'PRIORITY', 'stream_id': 0}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "20": {
    "description": "If a RST_STREAM frame is received with a stream identifier of 0x00, the recipient MUST treat this as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 2 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'RST_STREAM', 'stream_id': 0}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "RST_STREAM",
              "stream_id": 0
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "21": {
    "description": "A RST_STREAM frame with a length other than 4 octets MUST be treated as a connection error (Section 5.4.1) of type FRAME_SIZE_ERROR.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 6. Additional data: None.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'RST_STREAM', 'payload_length': 5}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "RST_STREAM",
              "payload_length": 5
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "22": {
    "description": "RST_STREAM frames MUST NOT be sent for a stream in the 'idle' state.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'RST_STREAM'}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "23": {
    "description": "RST_STREAM frames MUST be associated with a stream.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'RST_STREAM'}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "24": {
    "description": "When set, the ACK flag indicates that this frame acknowledges receipt and application of the peer's SETTINGS frame. When this bit is set, the frame payload of the SETTINGS frame MUST be empty.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 6. Additional data: None.",
          "sent_frames": "[{'type': 'SETTINGS', 'flags': {'ACK': True}, 'settings': {'MAX_CONCURRENT_STREAMS': 100}}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "25": {
    "description": "The stream identifier for a SETTINGS frame MUST be zero (0x00).",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'SETTINGS', 'stream_id': 1, 'settings': {'MAX_CONCURRENT_STREAMS': 100}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "26": {
    "description": "A SETTINGS frame with a length other than a multiple of 6 octets MUST be treated as a connection error (Section 5.4.1) of type FRAME_SIZE_ERROR.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 6. Additional data: None.",
          "sent_frames": "[{'type': 'SETTINGS', 'extra_bytes': 5, 'settings': {'MAX_CONCURRENT_STREAMS': 100}}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "27": {
    "description": "The initial value of SETTINGS_ENABLE_PUSH is 1. Any value other than 0 or 1 MUST be treated as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'ENABLE_PUSH': 2}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "28": {
    "description": "For SETTINGS_INITIAL_WINDOW_SIZE, values above the maximum flow-control window size of 2^31-1 (2147483647) MUST be treated as a connection error (Section 5.4.1) of type FLOW_CONTROL_ERROR.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'INITIAL_WINDOW_SIZE': 2147483648}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "29": {
    "description": "The value advertised by an endpoint MUST be between initial value (2^14 = 16,384) and maximum allowed frame size (2^24-1 = 16,777,215 octets), inclusive.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'MAX_FRAME_SIZE': 16777216}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "30": {
    "description": "An endpoint that receives a SETTINGS frame with any unknown or unsupported identifier MUST ignore that setting.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'12345': 16777216}, 'raw_payload': True}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "31": {
    "description": "Unsupported settings MUST be ignored.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'12345': 16777216}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "32": {
    "description": "If a PING frame is received with a Stream Identifier field value other than 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'PING', 'stream_id': 3}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "33": {
    "description": "A receiver MUST treat the receipt of a WINDOW_UPDATE frame with a flow-control window increment of 0 as a stream error (Section 5.4.2) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'WINDOW_UPDATE', 'increment': 0}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "34": {
    "description": "A sender MUST NOT allow a flow-control window to exceed 2^31-1 octets. If a sender receives a WINDOW_UPDATE that causes a flow-control window to exceed this maximum, it MUST terminate either the stream or the connection, as appropriate.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'WINDOW_UPDATE', 'increment': 2147483647}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "35": {
    "description": "The sender MUST NOT send a flow-controlled frame with a length that exceeds the space available in either of the flow-control windows advertised by the receiver.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "DATA",
              "payload_size": 2147483647,
              "flags": {
                "END_STREAM": true
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '83b8b924-0830-4418-bde5-acada819db91'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]"
        }
      },
      "Worker_1": null
    }
  },
  "36": {
    "description": "If a CONTINUATION frame is received with a Stream Identifier field of 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'CONTINUATION', 'stream_id': 0}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "37": {
    "description": "A CONTINUATION frame MUST be preceded by a HEADERS, PUSH_PROMISE or CONTINUATION frame without the END_HEADERS flag set. (Using HEADERS frame with END_HEADERS flag set)",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'CONTINUATION: unexpected'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': True}}, {'type': 'CONTINUATION'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS",
              "flags": {
                "END_HEADERS": true
              }
            },
            {
              "type": "CONTINUATION"
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "38": {
    "description": "CONTINUATION frames MUST be associated with a stream.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'CONTINUATION: unexpected'.",
          "sent_frames": "[{'type': 'CONTINUATION'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "39": {
    "description": "If the END_HEADERS flag is not set, this frame MUST be followed by another CONTINUATION frame. A receiver MUST treat the receipt of any other type of frame or a frame on a different stream as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'DATA'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "40": {
    "description": "Trailers MUST NOT include pseudo-header fields (Section 8.3).",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 3 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'DATA'}, {'type': 'TRAILERS', 'headers': {':path': '/'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "DATA"
            },
            {
              "type": "TRAILERS",
              "headers": {
                ":path": "/"
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "41": {
    "description": "Other frames (from any stream) MUST NOT occur between the HEADERS frame and any CONTINUATION frames that might follow.",
    "result": {
      "Worker_1": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'DATA'}, {'type': 'CONTINUATION'}]"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      }
    }
  },
  "42": {
    "description": "An endpoint that receives a HEADERS frame without the END_STREAM flag set after receiving the HEADERS frame that opens a request or after receiving a final (non-informational) status code MUST treat the corresponding request or response as malformed (Section 8.1.1).",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 2 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'HEADERS', 'flags': {'END_STREAM': True}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "HEADERS",
              "flags": {
                "END_STREAM": true
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "43": {
    "description": "Field names MUST be converted to lowercase when constructing an HTTP/2 message.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':METHOD': 'GET', ':SCHEME': 'http', ':PATH': '/', ':AUTHORITY': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "44": {
    "description": "Field names MUST NOT contain control characters (0x00-0x1F)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x\\x08y': 'backspace', 'x\\ty': 'horizontal-tab', 'x\\ny': 'line-feed', 'x\\x0by': 'vertical-tab', 'x\\x0cy': 'form-feed', 'x\\ry': 'carriage-return', 'x\\x1by': 'escape'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "45": {
    "description": "Field names MUST NOT contain ASCII SP (0x20)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'user agent': 'nopasaran'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "46": {
    "description": "Field names MUST NOT contain DEL character (0x7F)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'user\\x7fagent': 'del-char'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "47": {
    "description": "Field names MUST NOT contain high byte characters (0x80-0xFF)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x\u00a8y': 'diaeresis', 'x\u00b0y': 'degree-sign', 'x\u00b8y': 'cedilla', 'x\u00c0y': 'latin-a-grave', 'x\u00c8y': 'latin-e-grave', 'x\u00d0y': 'latin-eth', 'x\u00d8y': 'latin-o-stroke', 'x\u00e0y': 'latin-a-grave-small', 'x\u00e8y': 'latin-e-grave-small', 'x\u00f0y': 'latin-eth-small', 'x\u00f8y': 'latin-o-stroke-small', 'x\u00fay': 'latin-u-acute-small', 'x\u00fcy': 'latin-u-diaeresis-small', 'x\u00fey': 'latin-thorn-small', 'x\u00ffy': 'latin-y-diaeresis-small'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "48": {
    "description": "With the exception of pseudo-header fields (Section 8.3), which have a name that starts with a single colon, field names MUST NOT include a colon (ASCII COLON, 0x3a).",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x:y': 'invalid-colon'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "49": {
    "description": "A field value MUST NOT contain line feed (ASCII LF, 0x0a). (Tested at the start of the value)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-lf-start': '\\nvalue'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "50": {
    "description": "A field value MUST NOT contain carriage return (ASCII CR, 0x0d). (Tested at the start of the value)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-cr-start': '\\rvalue'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "51": {
    "description": "A field value MUST NOT start with an ASCII whitespace character (ASCII SP or HTAB, 0x20 or 0x09).",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 1 reset by peer: Received StreamReset frame after sending frame #1 of 1: HEADERS. Error code None.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':scheme', 'http'), (':path', '/'), (':authority', 'example.com'), ('x-leading-space', ' value'), ('x-forwarded-proto', 'http'), ('x-request-id', '09dc2d14-2183-4282-b3b0-68ee7057e454'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Test result: UNMODIFIED"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Test result: UNMODIFIED",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:20:03 GMT')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-leading-space': ' value'}}]",
          "msg": "Server_Received_Error_From_Proxy"
        }
      }
    }
  },
  "52": {
    "description": "A field value MUST NOT end with an ASCII whitespace character (ASCII SP or HTAB, 0x20 or 0x09).",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 1 reset by peer: Received StreamReset frame after sending frame #1 of 1: HEADERS. Error code None.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':scheme', 'http'), (':path', '/'), (':authority', 'example.com'), ('x-trailing-space', 'value '), ('x-forwarded-proto', 'http'), ('x-request-id', '8bba3c0f-5bbb-4910-b7dd-246c23f8e18f'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Test result: UNMODIFIED"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Test result: UNMODIFIED",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:20:26 GMT')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-trailing-space': 'value '}}]",
          "msg": "Server_Received_Error_From_Proxy"
        }
      }
    }
  },
  "53": {
    "description": "A field value MUST NOT contain line feed (ASCII LF, 0x0a). (Tested at the middle of the value)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-lf-middle': 'val\\nue'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "54": {
    "description": "A field value MUST NOT contain line feed (ASCII LF, 0x0a). (Tested at the end of the value)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-lf-end': 'value\\n'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "55": {
    "description": "A field value MUST NOT contain carriage return (ASCII CR, 0x0d). (Tested at the middle of the value)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-cr-middle': 'val\\rue'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "56": {
    "description": "A field value MUST NOT contain carriage return (ASCII CR, 0x0d). (Tested at the end of the value)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'x-cr-end': 'value\\r'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "57": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing connection header field (RFC9113 Section 8.2.2)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'connection': 'keep-alive'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "58": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing proxy-connection header field (RFC9113 Section 8.2.2)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'proxy-connection': 'keep-alive'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "59": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing keep-alive header field (RFC9113 Section 8.2.2)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'keep-alive': 'timeout=5'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "60": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing transfer-encoding header field (RFC9113 Section 8.2.2)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'transfer-encoding': 'chunked'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "61": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing upgrade header field (RFC9113 Section 8.2.2)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'upgrade': 'h2c'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "62": {
    "description": "The TE header field MAY be present in an HTTP/2 request; when it is, it MUST NOT contain any value other than 'trailers'.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'te': 'gzip'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "63": {
    "description": "Pseudo-header fields are not HTTP header fields. Endpoints MUST NOT generate pseudo-header fields other than those defined in this document.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', ':version': '2.0'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "64": {
    "description": "Pseudo-header fields defined for responses MUST NOT appear in requests.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', ':status': '200'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "65": {
    "description": "All pseudo-header fields sent from a client MUST appear in a field block before all regular field lines. Any request or response that contains a pseudo-header field that appears in a field block after a regular field line MUST be treated as malformed (Section 8.1.1).",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {'accept': '*/*', ':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "66": {
    "description": "The same pseudo-header field name MUST NOT appear more than once in a field block. A field block for an HTTP request or response that contains a repeated pseudo-header field name MUST be treated as malformed (Section 8.1.1). Tested with a request frame with the same value.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com'}, 'duplicate_headers': {':authority': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "67": {
    "description": "The same pseudo-header field name MUST NOT appear more than once in a field block. A field block for an HTTP request or response that contains a repeated pseudo-header field name MUST be treated as malformed (Section 8.1.1). Tested with a request frame with different values.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com'}, 'duplicate_headers': {':authority': 'nopasaran.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "68": {
    "description": "Clients MUST NOT generate a request with a Host header field that differs from the \":authority\" pseudo-header field.",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 1 reset by peer: Received StreamReset frame after sending frame #1 of 1: HEADERS. Error code None.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':scheme', 'http'), (':path', '/'), (':authority', 'example.com,nopasaran.com'), ('x-forwarded-proto', 'http'), ('x-request-id', '57c3aca5-19c3-4dad-aabb-795e86e53e61'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Test result: MODIFIED"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Test result: MODIFIED",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:25:37 GMT')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'example.com', 'host': 'nopasaran.com'}}]",
          "msg": "Server_Received_Error_From_Proxy"
        }
      }
    }
  },
  "69": {
    "description": "':authority' MUST NOT include the deprecated userinfo subcomponent for \"http\" or \"https\" schemed URIs.",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 1 reset by peer: Received StreamReset frame after sending frame #1 of 1: HEADERS. Error code None.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':scheme', 'http'), (':path', '/'), (':authority', 'user:pass@example.com'), ('x-forwarded-proto', 'http'), ('x-request-id', '0c20b57b-7e10-4db2-9a98-4ebb7d798f91'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Test result: UNMODIFIED"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Test result: UNMODIFIED",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:25:57 GMT')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '/', ':authority': 'user:pass@example.com'}}]",
          "msg": "Server_Received_Error_From_Proxy"
        }
      }
    }
  },
  "70": {
    "description": "The \":path\" pseudo-header field MUST NOT be empty for \"http\" or \"https\" URIs; \"http\" or \"https\" URIs that do not contain a path component MUST include a value of '/'.",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':path': '', ':authority': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "71": {
    "description": "All HTTP/2 requests MUST include exactly one valid value for the \":method\", \":scheme\", and \":path\" pseudo-header fields, unless they are CONNECT requests (Section 8.5). An HTTP request that omits mandatory pseudo-header fields is malformed (Section 8.1.1). (Tested with :method missing)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':scheme': 'http', ':path': '/', ':authority': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "72": {
    "description": "All HTTP/2 requests MUST include exactly one valid value for the \":method\", \":scheme\", and \":path\" pseudo-header fields, unless they are CONNECT requests (Section 8.5). An HTTP request that omits mandatory pseudo-header fields is malformed (Section 8.1.1). (Tested with :scheme missing)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':path': '/', ':authority': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "73": {
    "description": "All HTTP/2 requests MUST include exactly one valid value for the \":method\", \":scheme\", and \":path\" pseudo-header fields, unless they are CONNECT requests (Section 8.5). An HTTP request that omits mandatory pseudo-header fields is malformed (Section 8.1.1). (Tested with :path missing)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'GET', ':scheme': 'http', ':authority': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "74": {
    "description": "A client cannot push. Thus, servers MUST treat the receipt of a PUSH_PROMISE frame as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 2 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'PUSH_PROMISE', 'flags': {'END_STREAM': True}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "PUSH_PROMISE",
              "flags": {
                "END_STREAM": true
              }
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "75": {
    "description": "With the CONNECT method, the \" :scheme\" and \" :path\" pseudo-header fields MUST be omitted. (Tested with only :path present)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'CONNECT', ':path': '/', ':authority': 'example.com:80'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "76": {
    "description": "With the CONNECT method, the \" :scheme\" and \" :path\" pseudo-header fields MUST be omitted. (Tested with only :scheme present)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'CONNECT', ':scheme': 'http', ':authority': 'example.com:80'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "77": {
    "description": "With the CONNECT method, the \":scheme\" and \":path\" pseudo-header fields MUST be omitted. (Tested with both present)",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'CONNECT', ':scheme': 'http', ':path': '/', ':authority': 'example.com:80'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "78": {
    "description": "With the CONNECT method, The \":authority\" pseudo-header field contains the host and port to connect to",
    "result": {
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "role": "server",
          "client_val": "client",
          "event": "TIMEOUT",
          "server": null,
          "msg": "Timeout occurred after 5.0s while waiting for client connection at 0.0.0.0:8080.",
          "result": "TIMEOUT"
        }
      },
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 1 frames.",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':method': 'CONNECT', ':authority': 'example.com'}}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      }
    }
  },
  "79": {
    "description": "Values greater than 16,384 MUST NOT be sent unless receiver has set larger SETTINGS_MAX_FRAME_SIZE. (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 6. Additional data: b'too large frame size'.",
          "sent_frames": "[{'type': 'DATA', 'payload_size': 17000}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '306c6ce0-5dfa-499c-b0ef-4d10f5590fd1'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:31:52 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "80": {
    "description": "The frame type determines the format and semantics of the frame. Implementations MUST ignore and discard frames of unknown types. (server side)",
    "result": {
      "Worker_2": null,
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:32:06 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "81": {
    "description": "A reserved 1-bit field. The semantics of this bit are undefined, and the bit MUST remain unset (0x00) when sending and MUST be ignored when receiving. (server side)",
    "result": {
      "Worker_2": {
        "State": "FINAL",
        "Variables": {
          "server_result": "Successfully received all 1/1 frames.",
          "client_result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '3c3bd469-fc56-47ae-a951-e53cc7e27ad7'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'reserved_bit': True}]"
        }
      },
      "Worker_1": {
        "State": "FINAL",
        "Variables": {
          "client_result": "Successfully received all 1/1 frames.",
          "server_result": "Successfully received all 1/1 frames.",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:32:20 GMT'), ('x-envoy-upstream-service-time', '92')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]"
        }
      }
    }
  },
  "82": {
    "description": "If this stream (initially in the idle state) is initiated by the server, as described in Section 5.1.1, then receiving a HEADERS frame MUST also be treated as a connection error (Section 5.4.1) of type PROTOCOL_ERROR.  (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:32:33 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '66f4eef0-47b8-4994-9ec8-b01d649d6dd2'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'stream_id': 2}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "83": {
    "description": "An endpoint MUST NOT send any type of frame other than HEADERS, RST_STREAM, or PRIORITY in the reserved (local) state. (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 2 reset by peer: Received StreamReset frame after sending frame #1 of 2: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE'}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '61bc4c67-2063-48c7-af9c-f8997cf91cb2'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:32:53 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "84": {
    "description": "Receiving any frame other than HEADERS or PRIORITY on a stream in this (idle) state MUST be treated as a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:33:06 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 1. Additional data: b'DATA: stream in idle'.",
          "sent_frames": "[{'type': 'DATA', 'stream_id': 5}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'dbf62252-65ae-4c22-a26f-16c8b3d49518'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      }
    }
  },
  "85": {
    "description": "If an endpoint receives additional frames, other than WINDOW_UPDATE, PRIORITY, or RST_STREAM, for a stream that is in the half-closed (remote) state, it MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:33:40 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 2 frames. Error code 1. Additional data: b'DATA: stream not opened'.",
          "sent_frames": "[{'type': 'DATA', 'flags': {'END_STREAM': True}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '8bf14e9c-4438-4802-807f-5c463a9b39de'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      }
    }
  },
  "86": {
    "description": "An endpoint MUST NOT send frames other than PRIORITY on a closed stream. (server side)",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 2 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'RST_STREAM'}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "RST_STREAM"
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "87": {
    "description": "Streams initiated by a server MUST use even-numbered stream identifiers. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:34:12 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'd013a05b-2b11-47e2-b40b-cd45daac62e9'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'stream_id': 5}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "88": {
    "description": "An endpoint MUST NOT send a RST_STREAM in response to a RST_STREAM frame (server side)",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 2 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'RST_STREAM'}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "RST_STREAM"
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "89": {
    "description": "DATA frames MUST be associated with a stream. (server side) (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 1. Additional data: b'DATA: stream in idle'.",
          "sent_frames": "[{'type': 'DATA', 'stream_id': 5}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '84a78f4e-63b2-47b6-857b-25d5a465209e'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:34:51 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "90": {
    "description": "If a DATA frame is received whose Stream Identifier field is 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'DATA: stream_id == 0'.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'DATA', 'stream_id': 0}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '6e1859a8-b1e4-4a1f-b52d-626779b3d678'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "TIMEOUT",
        "Variables": {
          "client": null,
          "ctrl": null,
          "client_val": "client",
          "role": "client",
          "result": "TIMEOUT",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "server_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "DATA",
              "stream_id": 0
            }
          ],
          "event": "TIMEOUT",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:35:04 GMT'), ('x-envoy-upstream-service-time', '88')]>]"
        }
      }
    }
  },
  "91": {
    "description": "If a DATA frame is received whose stream is not in the 'open' or 'half-closed (local)' state, the recipient MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED. (Tested in the idle state.) (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 1. Additional data: b'DATA: stream in idle'.",
          "sent_frames": "[{'type': 'DATA', 'stream_id': 5}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'dc54351e-8883-4af2-9240-602a44528963'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:35:24 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "92": {
    "description": "If a DATA frame is received whose stream is not in the 'open' or 'half-closed (local)' state, the recipient MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED. (Tested in the half-closed (remote) state.) (server side)",
    "result": {
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '36d206cd-5f0a-41f5-bcf5-922429a77141'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': True}}, {'type': 'DATA'}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      },
      "Worker_1": {
        "State": "TIMEOUT",
        "Variables": {
          "client": null,
          "ctrl": null,
          "client_val": "client",
          "role": "client",
          "result": "TIMEOUT",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "server_frames": [
            {
              "type": "HEADERS",
              "flags": {
                "END_STREAM": true
              }
            },
            {
              "type": "DATA"
            }
          ],
          "event": "TIMEOUT",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:35:38 GMT'), ('x-envoy-upstream-service-time', '99')]>]"
        }
      }
    }
  },
  "93": {
    "description": "If a DATA frame is received whose stream is not in the 'open' or 'half-closed (local)' state, the recipient MUST respond with a stream error (Section 5.4.2) of type STREAM_CLOSED. (Tested in the closed state.) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '85'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:35:58 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '61cd0ea7-0c23-408c-b063-619bedf103b3'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'RST_STREAM'}, {'type': 'DATA'}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "94": {
    "description": "A HEADERS frame without the END_HEADERS flag set MUST be followed by a CONTINUATION frame for the same stream. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:36:17 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'DATA'}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'f70a59ca-045b-4f92-afa1-07f51e0f256e'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      }
    }
  },
  "95": {
    "description": "If a HEADERS frame is received whose Stream Identifier field is 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:36:30 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'c0b11d87-00e3-4d11-aa7d-c6a5d6da6b29'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'stream_id': 0}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "96": {
    "description": "If a PRIORITY frame is received with a stream identifier of 0x00, the recipient MUST respond with a connection error of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:36:50 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '310e0ac5-1a23-44e0-90e1-8ed569a6e3db'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'PRIORITY', 'stream_id': 0}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "97": {
    "description": "After receiving a RST_STREAM on a stream, the receiver MUST NOT send additional frames for that stream, except for PRIORITY (server side)",
    "result": {
      "Worker_1": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_CLIENT_FRAMES_SENT_CLIENT",
        "Variables": {
          "result": "Successfully sent 2 frames.",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'RST_STREAM'}]",
          "msg": "Server_Failed_To_Start_or_Receive_All_Frames"
        }
      },
      "Worker_2": {
        "State": "TIMEOUT",
        "Variables": {
          "ctrl": null,
          "server": null,
          "client_val": "client",
          "role": "server",
          "client_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "RST_STREAM"
            }
          ],
          "event": "TIMEOUT",
          "result": "TIMEOUT",
          "frames_received": "[]"
        }
      }
    }
  },
  "98": {
    "description": "If a RST_STREAM frame is received with a stream identifier of 0x00, the recipient MUST treat this as a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:37:31 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'b9ea5b39-e006-4df1-948e-0f4cb6220143'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'RST_STREAM', 'stream_id': 0}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "99": {
    "description": "A RST_STREAM frame with a length other than 4 octets MUST be treated as a connection error (Section 5.4.1) of type FRAME_SIZE_ERROR. (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 6. Additional data: None.",
          "sent_frames": "[{'type': 'RST_STREAM', 'payload_length': 5}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'd214d18f-99ba-435f-8a29-a6dbb3f029f5'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:37:50 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "100": {
    "description": "RST_STREAM frames MUST NOT be sent for a stream in the 'idle' state. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:38:04 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'fcd85d7b-5d57-42eb-8fd8-33c2ab881d80'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'RST_STREAM', 'stream_id': 5}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "101": {
    "description": "RST_STREAM frames MUST be associated with a stream. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:38:23 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'c301e0ef-b9b9-49d0-9b62-9a950710de94'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'RST_STREAM', 'stream_id': 5}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "102": {
    "description": "When set, the ACK flag indicates that this frame acknowledges receipt and application of the peer's SETTINGS frame. When this bit is set, the frame payload of the SETTINGS frame MUST be empty. (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 6. Additional data: None.",
          "sent_frames": "[{'type': 'SETTINGS', 'flags': {'ACK': True}, 'settings': {'MAX_CONCURRENT_STREAMS': 100}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '96c0850d-aa4e-4493-9977-a18486eeaf16'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:38:44 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "103": {
    "description": "The stream identifier for a SETTINGS frame MUST be zero (0x00). (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:38:58 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'baf11a99-a7fa-488d-aa25-385e7c670570'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'SETTINGS', 'stream_id': 3, 'settings': {'MAX_CONCURRENT_STREAMS': 100}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "104": {
    "description": "A SETTINGS frame with a length other than a multiple of 6 octets MUST be treated as a connection error (Section 5.4.1) of type FRAME_SIZE_ERROR. (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 6. Additional data: None.",
          "sent_frames": "[{'type': 'SETTINGS', 'extra_bytes': 5, 'settings': {'MAX_CONCURRENT_STREAMS': 100}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '45b8733c-125d-450d-b96a-35a80a507b1a'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:39:17 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "105": {
    "description": "A server MUST NOT explicitly set this value (SETTINGS_ENABLE_PUSH) to 1. A server MAY choose to omit this setting (SETTINGS_ENABLE_PUSH) when it sends a SETTINGS frame, but if a server does include a value, it MUST be 0. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:39:30 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'e4403e74-c26e-4816-a202-7a4815eb5ad9'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'ENABLE_PUSH': 1}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "106": {
    "description": "A server MUST NOT send a PUSH_PROMISE frame if it receives the SETTINGS_ENABLE_PUSH (0x02) parameter set to a value of 0. (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 2 reset by peer: Received StreamReset frame after sending frame #1 of 1: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE'}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'd3cf429d-fd1d-4a40-a08f-33cdbd31355c'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:39:50 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "107": {
    "description": "For SETTINGS_INITIAL_WINDOW_SIZE, values above the maximum flow-control window size of 2^31-1 (2147483647) MUST be treated as a connection error (Section 5.4.1) of type FLOW_CONTROL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:40:03 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'cfd68850-1228-4d5e-b9cc-5cb6ab0af1d5'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'INITIAL_WINDOW_SIZE': 2147483648}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "108": {
    "description": "The value advertised by an endpoint MUST be between initial value (2^14 = 16,384) and maximum allowed frame size (2^24-1 = 16,777,215 octets), inclusive. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:40:23 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '92f9c340-cdc3-433a-82c6-9f4798e2c461'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'MAX_FRAME_SIZE': 16777216}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "109": {
    "description": "An endpoint that receives a SETTINGS frame with any unknown or unsupported identifier MUST ignore that setting. (server side)",
    "result": {
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'bf4eb458-ce06-4608-bc36-d659b250beda'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'12345': 16777216}, 'raw_payload': True}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:40:47 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "110": {
    "description": "Unsupported settings MUST be ignored. (server side)",
    "result": {
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '98083362-945e-4c5a-ae82-0fd8f7cd8391'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'SETTINGS', 'settings': {'12345': 16777216}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:41:06 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "111": {
    "description": "If the Stream Identifier field of a PUSH_PROMISE frame specifies the value 0x00, a recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:41:22 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'dcedae8f-660b-4a02-ac1a-8cc1fed65b7f'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'PUSH_PROMISE', 'stream_id': 0}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "112": {
    "description": "The promised stream identifier MUST be a valid choice for the next stream sent by the sender (see 'new stream identifier' in Section 5.1.1). (Using Odd-numbered Stream ID (Invalid for Server)) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:41:41 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'c5f9cd64-094b-4096-a0d7-edaea32ab997'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'PUSH_PROMISE', 'promised_stream_id': 3}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "113": {
    "description": "The promised stream identifier MUST be a valid choice for the next stream sent by the sender (see 'new stream identifier' in Section 5.1.1). (Using Already Used Stream ID) (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 2 reset by peer: Received StreamReset frame after sending frame #1 of 2: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE'}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '735e4d6f-4b94-4c40-8759-7e6c394b8249'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:42:00 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "114": {
    "description": "The promised stream identifier MUST be a valid choice for the next stream sent by the sender (see 'new stream identifier' in Section 5.1.1). (Using Lower Stream ID) (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 4 reset by peer: Received StreamReset frame after sending frame #1 of 2: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE', 'promised_stream_id': 4}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '02e6b018-67c4-4cdd-aedc-aa6bf9f9f0e8'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:42:14 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "115": {
    "description": "A PUSH_PROMISE frame without the END_HEADERS flag set MUST be followed by a CONTINUATION frame for the same stream. (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 2 reset by peer: Received StreamReset frame after sending frame #1 of 2: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE', 'flags': {'END_HEADERS': False}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'bb055f40-dbce-4434-b31e-7a93c3004495'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:42:27 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "116": {
    "description": "If a PING frame is received with a Stream Identifier field value other than 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:42:40 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '8a279c16-ae20-4881-964f-1744617a9f06'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'PING', 'stream_id': 3}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "117": {
    "description": "A receiver MUST treat the receipt of a WINDOW_UPDATE frame with a flow-control window increment of 0 as a stream error (Section 5.4.2) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:43:19 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '6365a2db-5063-4ae1-b2a3-47205f7b6da2'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'WINDOW_UPDATE', 'increment': 0}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "118": {
    "description": "A sender MUST NOT allow a flow-control window to exceed 2^31-1 octets. If a sender receives a WINDOW_UPDATE that causes a flow-control window to exceed this maximum, it MUST terminate either the stream or the connection, as appropriate (server side).",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:43:39 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '5236efa0-e522-431e-a350-1d6e8897cf70'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'WINDOW_UPDATE', 'increment': 2147483647}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "119": {
    "description": "The sender MUST NOT send a flow-controlled frame with a length that exceeds the space available in either of the flow-control windows advertised by the receiver. (server side)",
    "result": {
      "Worker_1": {
        "State": "TIMEOUT",
        "Variables": {
          "client": null,
          "ctrl": null,
          "client_val": "client",
          "role": "client",
          "result": "TIMEOUT",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "server_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "DATA",
              "payload_size": 2147483647
            }
          ],
          "event": "TIMEOUT",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:43:59 GMT'), ('x-envoy-upstream-service-time', '88')]>]"
        }
      },
      "Worker_2": null
    }
  },
  "120": {
    "description": "A CONTINUATION frame MUST be preceded by a HEADERS, PUSH_PROMISE or CONTINUATION frame without the END_HEADERS flag set. (Using PUSH_PROMISE frame with END_HEADERS flag set) (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 2 reset by peer: Received StreamReset frame after sending frame #1 of 2: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE', 'flags': {'END_HEADERS': True}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'c21a707d-b749-4c0f-a4e3-a3b76951c952'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:44:41 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "121": {
    "description": "If a CONTINUATION frame is received with a Stream Identifier field of 0x00, the recipient MUST respond with a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'CONTINUATION', 'stream_id': 0}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '053c33fc-af61-4321-90c1-8d745d4e056f'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/2 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:44:56 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "122": {
    "description": "A CONTINUATION frame MUST be preceded by a HEADERS, PUSH_PROMISE or CONTINUATION frame without the END_HEADERS flag set. (Using HEADERS frame with END_HEADERS flag set) (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'CONTINUATION: unexpected'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': True}}, {'type': 'CONTINUATION'}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'a0d85ca4-0e71-4d91-ab3d-f30a4cbc19c3'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "TIMEOUT",
        "Variables": {
          "client": null,
          "ctrl": null,
          "client_val": "client",
          "role": "client",
          "result": "TIMEOUT",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "server_frames": [
            {
              "type": "HEADERS",
              "flags": {
                "END_HEADERS": true
              }
            },
            {
              "type": "CONTINUATION"
            }
          ],
          "event": "TIMEOUT",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:45:09 GMT'), ('x-envoy-upstream-service-time', '96')]>]"
        }
      }
    }
  },
  "123": {
    "description": "CONTINUATION frames MUST be associated with a stream. (server side)",
    "result": {
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame after sending 1 of 1 frames. Error code 1. Additional data: b'CONTINUATION: unexpected'.",
          "sent_frames": "[{'type': 'CONTINUATION', 'stream_id': 5}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '7817db43-f179-4e84-92f1-6acb5ea02f4d'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:45:29 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "124": {
    "description": "If the END_HEADERS flag is not set, this frame MUST be followed by another CONTINUATION frame. A receiver MUST treat the receipt of any other type of frame or a frame on a different stream as a connection error (Section 5.4.1) of type PROTOCOL_ERROR. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/3 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:45:42 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'CONTINUATION', 'flags': {'END_HEADERS': False}}, {'type': 'DATA'}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'c0e4ae35-cad6-48e6-8910-0a5da09783c9'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      }
    }
  },
  "125": {
    "description": "Trailers MUST NOT include pseudo-header fields (Section 8.3). (server side)",
    "result": {
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '80e89071-c860-4020-a16a-50c6f10e52e6'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'DATA'}, {'type': 'TRAILERS', 'headers': {':path': '/'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      },
      "Worker_1": {
        "State": "TIMEOUT",
        "Variables": {
          "client": null,
          "ctrl": null,
          "client_val": "client",
          "role": "client",
          "result": "TIMEOUT",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "server_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "DATA"
            },
            {
              "type": "TRAILERS",
              "headers": {
                ":path": "/"
              }
            }
          ],
          "event": "TIMEOUT",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:45:55 GMT'), ('x-envoy-upstream-service-time', '97')]>, <DataReceived stream_id:None, flow_controlled_length:None, data:>]"
        }
      }
    }
  },
  "126": {
    "description": "Other frames (from any stream) MUST NOT occur between the HEADERS frame and any CONTINUATION frames that might follow. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/3 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:46:15 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "GOAWAY_RECEIVED",
        "Variables": {
          "msg": "Connection terminated by peer: Received GOAWAY frame with error code 1. Additional data: b'unexpected non-CONTINUATION frame or stream_id is invalid'.",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_HEADERS': False}}, {'type': 'DATA'}, {'type': 'CONTINUATION'}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '270bcede-6dda-47db-a580-af66c6b39ffa'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      }
    }
  },
  "127": {
    "description": "An endpoint that receives a HEADERS frame without the END_STREAM flag set after receiving the HEADERS frame that opens a request or after receiving a final (non-informational) status code MUST treat the corresponding request or response as malformed (Section 8.1.1). (server side)",
    "result": {
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'ed11b6b7-9add-4468-8c10-ec7393d610ea'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS'}, {'type': 'HEADERS'}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      },
      "Worker_1": {
        "State": "TIMEOUT",
        "Variables": {
          "client": null,
          "ctrl": null,
          "client_val": "client",
          "role": "client",
          "result": "TIMEOUT",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]",
          "server_frames": [
            {
              "type": "HEADERS"
            },
            {
              "type": "HEADERS"
            }
          ],
          "event": "TIMEOUT",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('content-type', 'text/plain'), ('server', 'envoy'), ('date', 'Mon, 08 Sep 2025 09:46:28 GMT'), ('x-envoy-upstream-service-time', '86')]>]"
        }
      }
    }
  },
  "128": {
    "description": "Field names MUST be converted to lowercase when constructing an HTTP/2 message. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:46:48 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '55390439-28b6-430f-b765-da95fcf40b90'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':STATUS': '200'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "129": {
    "description": "Field names MUST NOT contain control characters (0x00-0x1F) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:47:07 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'c478a068-6832-449e-b75c-8838de907689'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x\\x08y': 'backspace'}, 'test': {'function': 'check_header_field', 'params': {'name': 'x\\\\x08y'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "130": {
    "description": "Field names MUST NOT contain ASCII SP (0x20) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:47:46 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'c46cae61-4c1e-4684-a933-4acde0104f1d'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'content type': 'text/html; charset=UTF-8'}, 'test': {'function': 'check_header_field', 'params': {'name': 'content type'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "131": {
    "description": "Field names MUST NOT contain DEL character (0x7F) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:48:06 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'e6654769-b3c3-48ee-8b81-8508eeff2e74'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'content\\x7ftype': 'text/html; charset=UTF-8'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "132": {
    "description": "Field names MUST NOT contain high byte characters (0x80-0xFF) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:48:25 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '62bd6421-cb5b-4339-8b06-7180c1fea0f4'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x\u00a8y': 'diaeresis'}, 'test': {'function': 'check_header_field', 'params': {'name': 'x\u00a8y'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "133": {
    "description": "With the exception of pseudo-header fields (Section 8.3), which have a name that starts with a single colon, field names MUST NOT include a colon (ASCII COLON, 0x3a). (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:48:44 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '334bb2b3-c60e-4484-a8b3-c0617586166a'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x:y': 'invalid-colon'}, 'test': {'function': 'check_header_field', 'params': {'name': 'x:y'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "134": {
    "description": "A field value MUST NOT contain line feed (ASCII LF, 0x0a). (Tested at the start of the value) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:49:03 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '8cc0c91a-562c-42d3-a7ce-6f038f081206'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-lf-start': '\\nvalue'}, 'test': {'function': 'check_header_field', 'params': {'name': 'x-lf-start'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "135": {
    "description": "A field value MUST NOT contain carriage return (ASCII CR, 0x0d). (Tested at the start of the value) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:49:22 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'dd7150d4-9a28-4d51-8809-6e1bcf33b043'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-cr-start': '\\rvalue'}, 'test': {'function': 'check_header_field', 'params': {'name': 'x-cr-start'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "136": {
    "description": "A field value MUST NOT start with an ASCII whitespace character (ASCII SP or HTAB, 0x20 or 0x09). (server side)",
    "result": {
      "Worker_2": {
        "State": "FINAL",
        "Variables": {
          "server_result": "Successfully received all 1/1 frames.",
          "client_result": "Test result: UNMODIFIED",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'ea0ec07f-4d53-480d-830a-fdd89b6d5e8e'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-leading-space': ' value'}, 'test': {'function': 'check_header_field', 'params': {'name': 'x-leading-space', 'value': ' value'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]"
        }
      },
      "Worker_1": {
        "State": "FINAL",
        "Variables": {
          "client_result": "Test result: UNMODIFIED",
          "server_result": "Successfully received all 1/1 frames.",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('x-leading-space', ' value'), ('x-envoy-upstream-service-time', '90'), ('date', 'Mon, 08 Sep 2025 09:49:42 GMT'), ('server', 'envoy')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]"
        }
      }
    }
  },
  "137": {
    "description": "A field value MUST NOT end with an ASCII whitespace character (ASCII SP or HTAB, 0x20 or 0x09). (server side)",
    "result": {
      "Worker_1": {
        "State": "FINAL",
        "Variables": {
          "client_result": "Test result: UNMODIFIED",
          "server_result": "Successfully received all 1/1 frames.",
          "frames_received": "[<ResponseReceived stream_id:1, headers:[(':status', '200'), ('x-trailing-space', 'value '), ('x-envoy-upstream-service-time', '97'), ('date', 'Mon, 08 Sep 2025 09:49:55 GMT'), ('server', 'envoy')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'flags': {'END_STREAM': 'true'}}]"
        }
      },
      "Worker_2": {
        "State": "FINAL",
        "Variables": {
          "server_result": "Successfully received all 1/1 frames.",
          "client_result": "Test result: UNMODIFIED",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '4e661a24-36fb-419d-8bce-c85f8bca34e4'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-trailing-space': 'value '}, 'test': {'function': 'check_header_field', 'params': {'name': 'x-trailing-space', 'value': 'value '}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]"
        }
      }
    }
  },
  "138": {
    "description": "A field value MUST NOT contain line feed (ASCII LF, 0x0a). (Tested at the middle of the value) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:50:09 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'a2978ea8-9276-4abd-a1f4-089b4082be56'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-lf-middle': 'val\\nue'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "139": {
    "description": "A field value MUST NOT contain line feed (ASCII LF, 0x0a). (Tested at the end of the value) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:50:28 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'a661b351-b76c-42af-97c4-2bceca1cf39b'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-lf-end': 'value\\n'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "140": {
    "description": "A field value MUST NOT contain carriage return (ASCII CR, 0x0d). (Tested at the middle of the value) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:50:47 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '77b66813-7e23-48fa-a242-88de4529a15d'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-cr-middle': 'val\\rue'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "141": {
    "description": "A field value MUST NOT contain carriage return (ASCII CR, 0x0d). (Tested at the end of the value) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:51:06 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '087655b2-28be-4813-9eb0-6e6a5a3722a2'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'x-cr-end': 'value\\r'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "142": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing connection header field (RFC9113 Section 8.2.2) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:51:44 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '2163ed24-9583-42f0-a3c8-d9d8c11b9f1a'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'connection': 'keep-alive'}, 'test': {'function': 'check_header_field', 'params': {'name': 'connection'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "143": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing proxy-connection header field (RFC9113 Section 8.2.2) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:52:04 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '317dd5aa-471c-4fb3-839a-7991cec1088c'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'proxy-connection': 'keep-alive'}, 'test': {'function': 'check_header_field', 'params': {'name': 'proxy-connection'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "144": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing keep-alive header field (RFC9113 Section 8.2.2) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:52:23 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '3e4d660c-2049-48a6-bee0-481fbbbc7d6f'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'keep-alive': 'timeout=5'}, 'test': {'function': 'check_header_field', 'params': {'name': 'keep-alive'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "145": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing transfer-encoding header field (RFC9113 Section 8.2.2) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:52:43 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '13039d0e-1dd0-47dc-b6aa-2e915d4509a9'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'transfer-encoding': 'chunked'}, 'test': {'function': 'check_header_field', 'params': {'name': 'transfer-encoding'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "146": {
    "description": "An endpoint MUST NOT generate an HTTP/2 message containing upgrade header field (RFC9113 Section 8.2.2) (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:53:02 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'd3f8f04a-95ea-4ff2-916d-b63cd24757d3'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'upgrade': 'h2c'}, 'test': {'function': 'check_header_field', 'params': {'name': 'upgrade'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "147": {
    "description": "The TE header field MAY be present in an HTTP/2 request; when it is, it MUST NOT contain any value other than 'trailers'. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:53:21 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '56f1a8a1-fd12-49cc-a1a1-827e2095ae8a'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', 'te': 'gzip'}, 'test': {'function': 'check_header_field', 'params': {'name': 'te', 'value': 'gzip'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "148": {
    "description": "Pseudo-header fields defined for requests MUST NOT appear in responses. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:53:41 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '985592c7-3174-4ccb-b057-fe7749097c15'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':status': '200', ':method': 'GET'}, 'test': {'function': 'check_header_field', 'params': {'name': ':method'}, 'if_true': 'UNMODIFIED', 'if_false': 'MODIFIED'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "149": {
    "description": "All pseudo-header fields sent from a server MUST appear in a field block before all regular field lines. Any request or response that contains a pseudo-header field that appears in a field block after a regular field line MUST be treated as malformed (Section 8.1.1). (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:54:00 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '4c1af7aa-fa1b-48bb-be65-4a747d74a44c'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {'date': '2024-01-01', ':status': '200'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "150": {
    "description": "The same pseudo-header field name MUST NOT appear more than once in a field block. A field block for an HTTP request or response that contains a repeated pseudo-header field name MUST be treated as malformed (Section 8.1.1). Tested with a response frame with the same value. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:54:21 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '7f92fdc8-5c9a-4547-933e-cb940ca7ff54'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'duplicate_headers': {':status': '200'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "151": {
    "description": "The same pseudo-header field name MUST NOT appear more than once in a field block. A field block for an HTTP request or response that contains a repeated pseudo-header field name MUST be treated as malformed (Section 8.1.1). Tested with a response frame with different values. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:54:40 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '26550153-9002-4ad6-a43e-0c0c217d7c60'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'duplicate_headers': {':status': '201'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "152": {
    "description": "Pseudo-header fields are not HTTP header fields. Endpoints MUST NOT generate pseudo-header fields other than those defined in this document. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:54:59 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '242232bf-ce4c-446d-9ef5-47e4a8d857be'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'raw_frame': True, 'headers': {':status': '200', ':version': '2.0'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "153": {
    "description": "For HTTP/2 responses, a single \":status\" pseudo-header field is defined that carries the HTTP status code field. This pseudo-header field MUST be included in all responses, including interim responses; otherwise, the response is malformed. (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:55:18 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '5cbbca4c-6b74-4f02-9e8d-c2c72dfe22ee'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {'date': '2024-01-01'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  },
  "154": {
    "description": "The header fields in PUSH_PROMISE and any subsequent CONTINUATION frames MUST be a valid and complete set of request header fields. (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 2 reset by peer: Received StreamReset frame after sending frame #1 of 1: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE', 'headers': {':method': 'GET', ':scheme': 'http', ':authority': 'example.com'}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', 'b0e3db7a-b805-4544-bf9a-2781dc980264'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:55:37 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "155": {
    "description": "In the PUSH_PROMISE frame, the server MUST include a method in the \":method\" pseudo-header field that is safe and cacheable. (server side)",
    "result": {
      "Worker_2": {
        "State": "RESET_RECEIVED",
        "Variables": {
          "msg": "Stream 2 reset by peer: Received StreamReset frame after sending frame #1 of 1: PUSH_PROMISE. Error code None.",
          "sent_frames": "[{'type': 'PUSH_PROMISE', 'headers': {':method': 'POST', ':scheme': 'http', ':path': '/', ':authority': 'example.com'}}]",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '0d757852-7b4d-4dcc-a8e6-f61dcf28a7d5'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "result": "Successfully received all 1/1 frames."
        }
      },
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:55:51 GMT'), ('server', 'envoy')]>"
        }
      }
    }
  },
  "156": {
    "description": "HTTP/2 does not support the 101 (Switching Protocols) informational status code (Section 15.2.2 of [HTTP]). (server side)",
    "result": {
      "Worker_1": {
        "State": "REJECTED",
        "Variables": {
          "client_result": "Received 5xx status code 503 after receiving 0/1 frames.",
          "frames_received": "<ResponseReceived stream_id:1, headers:[(':status', '503'), ('content-length', '95'), ('content-type', 'text/plain'), ('date', 'Mon, 08 Sep 2025 09:56:04 GMT'), ('server', 'envoy')]>"
        }
      },
      "Worker_2": {
        "State": "CONTROL_CHANNEL_TIMEOUT_AFTER_SERVER_FRAMES_SENT_SERVER",
        "Variables": {
          "result": "Successfully received all 1/1 frames.",
          "frames_received": "[<RequestReceived stream_id:1, headers:[(':method', 'GET'), (':path', '/test-frame'), (':authority', '192.168.122.69'), (':scheme', 'http'), ('user-agent', 'nopasaran-http2-client'), ('accept', '*/*'), ('x-forwarded-proto', 'http'), ('x-request-id', '2ba670b7-9de7-43e6-bc4c-b6b83c16ff5b'), ('x-envoy-expected-rq-timeout-ms', '15000')]>]",
          "sent_frames": "[{'type': 'HEADERS', 'headers': {':status': '101'}}]",
          "msg": "Client_Failed_To_Receive_All_Frames"
        }
      }
    }
  }
}